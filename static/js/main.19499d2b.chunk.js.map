{"version":3,"sources":["Map.jsx","index.js"],"names":["PRIVATE_KEY","CLIENT_EMAIL","doc","GoogleSpreadsheet","mapStyles","width","height","newRow","Name","Value","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","loads","cars","onMarkerClick","props","marker","e","setState","appendSpreadsheet","row","a","useServiceAccountAuth","client_email","private_key","loadInfo","loadsSheet","sheetsById","carsSheet","CARS_SHEET_ID","getRows","map","_rawData","loadsRows","carsRows","loadArray","load","Object","create","show","time","from","latitude","split","longitude","to","avtoType","mass","logist","price","console","error","this","google","zoom","style","onClick","onMapClicked","initialCenter","lat","lng","position","icon","process","visible","Component","GoogleApiWrapper","apiKey","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19499d2b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\n\r\n// Config variables\r\nconst SPREADSHEET_ID = '1QPbtYnw-oOH21yTUYTsjJcttCBtaNEtry6gJlmMuwB4';\r\nconst LOADS_SHEET_ID = '0';\r\nconst CARS_SHEET_ID = '103675873';\r\nconst PRIVATE_KEY = '-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCdR55QnRsy118J\\n2m/Gh3yy+WKuOieiw9Uh76lmj3KxX39A7vJn8lXlxa+mZZ2X3ivEhrS+UcDXlxPE\\nK8fD4+ra29+Cb1cs645lRmd3TBHbIwZjwjClU7ks+75uxlO+UQcxzXjxRuuC/Asb\\nDPQSNJbgs6G/Q1l0iPTdG3wCULH7kOhNj9ni//1dj/byNyOoUjgti7RwXd7CiK30\\nabWuYYUqLcMa/lN7hd1gSOxsKAMIbkm+6rUD/R8Tq9Z93P4RAu1OgzGK8ECJ8Hc5\\n8x6Wrh/t6GNuVRcMfFJ9+TVd9TRtNjHJD11owzAJvTuAivcVywDl3rblwsHzoDQX\\nthumQx2bAgMBAAECggEAKkJZBl4ANdvqfFJF4Dj9R3V8j0Wu6qvls3WataTrcz8u\\niPrrBQT3EYLZXENHYcvfRLHRFKYQw5yjQf1lcnvl2aJkXr6d1MMCArI1ELfOwGub\\nxughe/qP8cc+drMxQxywazBDQ8kDdLFWJpGHbvDUbVG2rxZgjdBSwqok2tZlzCrK\\nS1Uq3uHYMb7Y1Z8wa2AXiZLN/fxsU1cYULqQno1obfaBiZivOPPlnAlB+TGA8SSt\\nsy3sEJ8aMLcFPIB//CSHGjTD9d37q2ZirAIiZzzD1xlN5JtCXVlLUg6Oop2W1D/5\\n40W7oKuTsY5ulq9ZRFGY9Lp6kf39GtgYZL1Ow3qRmQKBgQDU4jihAOVZddmib6G/\\n3acqTy8hMZ5zYNLGep20006/ngx3If5rU5SIZNrQ2WC1MB/MJxt5f+ftq9wNB2qs\\n+MiT00s2HF5cyDgkQAnKOdLGp2iFlsBLLTMIl7sG9DsjqCRMuoSW7yIvF9HfZmCf\\n/t+5zKJvfIPKd8lK6/VCDS/OjwKBgQC9ImWReilO2WCMIDCclWD/rzH/58K+f71w\\nnY/powdjf2GTnVHUy/HCiqkeDYQfNkzogfbfxexM3tiN2WVqGvBn1Y9S/DbyUXie\\nEutue22HA5Qw2wKPELwsRAtCU9u+XuKOlL+BktW6UT5MDO/L2WVoW1kafw81Oqmi\\nzy33DhoGNQKBgQDNrc/Wxr3QhEuEZGSbsnTrLNw1LvKPORIMD7XFWo9wFSyoAaEF\\nYxhT+1VqiUulY1yla3dhGVIk0HHn6K2Jd0ibgn7dReVpsUyEwZZz2xApPN+Ailk5\\niO8Qs0BRBLEKz05bD65BAcQ+Sb5NIGXkz2Sq5+pc2qmeecNy7qzkZ0c0QwKBgCoP\\n70S2RV+KyoT/V7BLLGJQpS8DbPUO1aOo9ut/3VHMb3fzwdIwdRjN26SaXurOGbaP\\nyMalbtL9sG2DjqFVUmfVP+W1v8aORePp00Aj5Qzkx91Bp8UHdMHndBWRLsqcsYgC\\nHsEDVdL05ITnT6EnPP1Da4KQBWLSJA3YQ6GxGiqNAoGAAk8q7H322z194H1Z/W3B\\nXDJCzi+pTwk31AJUZP/mQbeD8AmWW3DzgXePblbxLDkwGv51eiVHSxs3ZXlYQ4uz\\nKVujplCNyF8tqI5AlLFWPRSjEj8jDUEO5g8r1Sxc8JwCLy9mF6K9du51RalBJmA7\\ncaRZR5BGIeTqs668GTWMK7M=\\n-----END PRIVATE KEY-----\\n';\r\nconst CLIENT_EMAIL = 'transportation@tidal-turbine-237820.iam.gserviceaccount.com';\r\n\r\nconst doc = new GoogleSpreadsheet(SPREADSHEET_ID);\r\n\r\nconst mapStyles = {\r\n    width: '100%',\r\n    height: '100%'\r\n};\r\n\r\nconst newRow = { Name: \"new name\", Value: \"new value\" };\r\n\r\nexport class MapContainer extends Component {\r\n    state = {\r\n        showingInfoWindow: false,\r\n        activeMarker: {},\r\n        selectedPlace: {},\r\n        loads: [],\r\n        cars: []\r\n    };\r\n\r\n    onMarkerClick = (props, marker, e) =>\r\n        this.setState({\r\n            selectedPlace: props,\r\n            activeMarker: marker,\r\n            showingInfoWindow: !this.state.showingInfoWindow\r\n        });\r\n\r\n    appendSpreadsheet = async (row) => {\r\n        try {\r\n            await doc.useServiceAccountAuth({\r\n                client_email: CLIENT_EMAIL,\r\n                private_key: PRIVATE_KEY,\r\n            });\r\n            await doc.loadInfo();\r\n            const loadsSheet = doc.sheetsById[LOADS_SHEET_ID];\r\n            const carsSheet = doc.sheetsById[CARS_SHEET_ID];\r\n            const loadsRows = await (await loadsSheet.getRows()).map((row) => row._rawData);\r\n            const carsRows = await (await carsSheet.getRows()).map((row) => row._rawData);\r\n            var loads = loadsRows.map((loadArray) => {\r\n                var load = Object.create({});\r\n                load.show = loadArray[0];\r\n                load.time = loadArray[1];\r\n                load.from = loadArray[2];\r\n                if (loadArray[3]) {\r\n                    load.latitude = loadArray[3].split(',')[0];\r\n                    load.longitude = loadArray[3].split(',')[1];\r\n                }\r\n                load.to = loadArray[4];\r\n                load.avtoType = loadArray[5];\r\n                load.mass = loadArray[6];\r\n                load.logist = loadArray[7];\r\n                load.price = loadArray[8];\r\n                return load;\r\n            });\r\n            var cars = carsRows.map((loadArray) => {\r\n                var load = Object.create({});\r\n                load.show = loadArray[0];\r\n                load.time = loadArray[1];\r\n                load.from = loadArray[2];\r\n                if (loadArray[3]) {\r\n                    load.latitude = loadArray[3].split(',')[0];\r\n                    load.longitude = loadArray[3].split(',')[1];\r\n                }\r\n                load.to = loadArray[4];\r\n                load.avtoType = loadArray[5];\r\n                load.mass = loadArray[6];\r\n                load.logist = loadArray[7];\r\n                load.price = loadArray[8];\r\n                return load;\r\n            });\r\n            this.setState({ loads: loads });\r\n            this.setState({ cars: cars });\r\n        } catch (e) {\r\n            console.error('Error: ', e);\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.appendSpreadsheet(newRow);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Map\r\n                google={this.props.google}\r\n                zoom={5}\r\n                style={mapStyles}\r\n                onClick={this.onMapClicked}\r\n                initialCenter={\r\n                    {\r\n                        lat: 51.107883, lng: 17.038538,\r\n                    }\r\n                }\r\n            >\r\n                {\r\n                    this.state.loads.map((load) => {\r\n                        if (load.show === 'TRUE') {\r\n                            return <Marker onClick={this.onMarkerClick}\r\n                                time={load.time}\r\n                                from={load.from}\r\n                                to={load.to}\r\n                                avtoType={load.avtoType}\r\n                                mass={load.mass}\r\n                                logist={load.logist}\r\n                                price={load.price}\r\n                                position={{\r\n                                    lat: load.latitude,\r\n                                    lng: load.longitude,\r\n                                }}\r\n                            />\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    })\r\n                }\r\n                {\r\n                    this.state.cars.map((load) => {\r\n                        if (load.show === 'TRUE') {\r\n                            return <Marker onClick={this.onMarkerClick}\r\n                                icon={process.env.PUBLIC_URL + '/car.png'}\r\n                                time={load.time}\r\n                                from={load.from}\r\n                                to={load.to}\r\n                                avtoType={load.avtoType}\r\n                                mass={load.mass}\r\n                                logist={load.logist}\r\n                                price={load.price}\r\n                                position={{\r\n                                    lat: load.latitude,\r\n                                    lng: load.longitude,\r\n                                }}\r\n                            />\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    })\r\n                }\r\n                <InfoWindow\r\n                    marker={this.state.activeMarker}\r\n                    visible={this.state.showingInfoWindow}>\r\n                    <div>\r\n                        <h5 key='time'>Час:{this.state.selectedPlace.time}</h5>\r\n                        <h5 key='from'>Звідки:{this.state.selectedPlace.from}</h5>\r\n                        <h5 key='to'>Куди:{this.state.selectedPlace.to}</h5>\r\n                        <h5 key='avtoType'>Тип авто:{this.state.selectedPlace.avtoType}</h5>\r\n                        <h5 key='mass'>Маса:{this.state.selectedPlace.mass}</h5>\r\n                        <h5 key='price'>Ціна:{this.state.selectedPlace.price}</h5>\r\n                        <h5 key='logist'>Логіст:{this.state.selectedPlace.logist}</h5>\r\n                    </div>\r\n                </InfoWindow>\r\n            </Map>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyBPdSJ8jTYlwZQZhgBeEv5EvM-3bPxOIWQ'\r\n})(MapContainer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GoogleApiWrapper from './Map';\n\nReactDOM.render(\n  <GoogleApiWrapper />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}